;; Auto-generated. Do not edit!


(when (boundp 'ImageProcessing_Node::DetectLaneFeedback)
  (if (not (find-package "IMAGEPROCESSING_NODE"))
    (make-package "IMAGEPROCESSING_NODE"))
  (shadow 'DetectLaneFeedback (find-package "IMAGEPROCESSING_NODE")))
(unless (find-package "IMAGEPROCESSING_NODE::DETECTLANEFEEDBACK")
  (make-package "IMAGEPROCESSING_NODE::DETECTLANEFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude DetectLaneFeedback.msg.html


(defclass ImageProcessing_Node::DetectLaneFeedback
  :super ros::object
  :slots (_result ))

(defmethod ImageProcessing_Node::DetectLaneFeedback
  (:init
   (&key
    ((:result __result) "")
    )
   (send-super :init)
   (setq _result (string __result))
   self)
  (:result
   (&optional __result)
   (if __result (setq _result __result)) _result)
  (:serialization-length
   ()
   (+
    ;; string _result
    4 (length _result)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _result
       (write-long (length _result) s) (princ _result s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _result
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _result (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get ImageProcessing_Node::DetectLaneFeedback :md5sum-) "c22f2a1ed8654a0b365f1bb3f7ff2c0f")
(setf (get ImageProcessing_Node::DetectLaneFeedback :datatype-) "ImageProcessing_Node/DetectLaneFeedback")
(setf (get ImageProcessing_Node::DetectLaneFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
string result

")



(provide :ImageProcessing_Node/DetectLaneFeedback "c22f2a1ed8654a0b365f1bb3f7ff2c0f")


